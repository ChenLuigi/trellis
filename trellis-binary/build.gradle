apply plugin: 'osgi'

description = 'Trellis Binary Module'

ext {
    moduleName = 'org.trellisldp.binary'
}

dependencies {

    api project(':trellis-api')

    implementation group: 'commons-codec', name: 'commons-codec', version: commonsCodecVersion
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    testImplementation group: 'commons-io', name: 'commons-io', version: commonsIoVersion
    testImplementation group: 'org.apache.commons', name: 'commons-rdf-simple', version: commonsRdfVersion
    testImplementation group: 'org.apiguardian', name: 'apiguardian-api', version: apiguardianVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: junitPlatformVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testImplementation project(':trellis-id')
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "${moduleName};version=${projectOsgiVersion}"
    }
}

artifacts {
    archives javadocJar
    archives sourceJar
    archives (file('build/resources/main/features.xml')) {
        classifier 'features'
        type 'xml'
    }
}

